// Public variables
@break1: 501px;
@break2: 801px;
@columns_count: 5;
@s_columns: 1;
@m_columns: 4;
@l_columns: 5;
////////////////////////////////////////////////////////////////
.duiMultiColumns{
  overflow: hidden;
}

.duiMultiColumns > .duiBasicLayout {
//  height: 100%;
}

@media screen and (max-width: @break1) {
  .duiMultiColumns > .duiBasicLayout{
	.adaptWidth(@s_columns);
  }
  .genTranslations(@columns_count - @s_columns + 1);
}

@media screen and (min-width: @break1) and (max-width: @break2) {
  .duiMultiColumns > .duiBasicLayout {
	.adaptWidth(@m_columns);
  }
  .genTranslations(@columns_count - @m_columns + 1);
}

@media screen and (min-width: @break2) {
  .duiMultiColumns > .duiBasicLayout {
	.adaptWidth(@l_columns);
  }
  .genTranslations(@columns_count - @l_columns + 1);
}

.adaptWidth(@i){
  @tmp: (100*(@columns_count)/@i);
  width: ~"@{tmp}%";
}

.genTranslations(@count){
  @i: 1;
  .while (@i) when (@i =< @count) {
	.duiMultiColumns > .duiBasicLayout.pos@{i}{
	  @val: -100 * @i / @columns_count;
	  .translateX(@val);
	}
	.while(@i+1);
  }
  .while(@i);
}

//.gen(){
//  @i: 1;
//  .while (@i) when (@i =< @columns_count) {
//	.col@{i} {
//	  @tmp: (100*(@columns_count)/@i);
//	  width: ~"@{tmp}%";
//	}
//	.while(@i+1);
//  }
//  .while(@i);
//}
//.translateX(v){
//
//}

.translateX(@v){
  @val: ~"@{v}%";
  -webkit-transform: translate3d(@val, 0px, 0px);
  transform: translate3d(@val, 0px, 0px);

}