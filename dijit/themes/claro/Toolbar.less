/* Toolbar 
 * 
 * Styling Toolbar means styling the toolbar container and the widget inside toolbar  (duiToolbar)
 * 
 * 1. toolbar (default styling): 
 * 		.duiToolbar - styles for outer container
 *
 * 2. widget inside toolbar
 * 		.duiToolbar .duiButtonNode   - Button widget
 * 					  .duiComboButton  - ComboButton widget
 * 					  .duiDropDownButton  - DropDownButton widget
 * 					  .duiToggleButton  - ToggleButton widget
 * 		
 * 3. hovered widget inside toolbar (ie, mouse hover on the widget inside)
 * 			.duiToolbar .duiButtonNode:hover  - styles for hovered Button widget
 * 
 * 4. actived widget inside toolbar (ie, mouse down on the widget inside)
 * 			.duiToolbar .duiButtonNode:active  - mouse down on Button widget
 */

@import "variables";

// From dijit.css

.dj_a11y .duiButtonNode {
	border: black outset medium !important;

	/* In claro, hovering a toolbar button reduces padding and adds a border.
	 * Not needed in a11y mode since Toolbar buttons always have a border.
	 */
	padding: 0 !important;
}


.duiToolbar .duiComboButton {
	/* because Toolbar only draws a border around the hovered thing */
	border-collapse: separate;
}

.duiToolbar .duiToggleButton,
.duiToolbar .duiButton,
.duiToolbar .duiDropDownButton,
.duiToolbar .duiComboButton {
	margin: 0;
}

.duiToolbar .duiButtonContents {
	/* just because it used to be this way */
	padding: 1px 2px;
}


.dj_webkit .duiToolbar .duiDropDownButton {
	padding-left: 0.3em;
}
.dj_gecko .duiToolbar .duiButtonNode::-moz-focus-inner {
	padding:0;
}

.duiToolbar .duiComboBox .duiArrowButtonContainer {
	/* override default ComboBox behavior, there should be no divider when ComboBox in Toolbar */
	border-width: 0 !important;
}

.dj_ie .duiToolbar .duiComboBox {
	/* make combobox buttons align properly with other buttons in a toolbar */
	vertical-align: middle;
}

.duiToolbarSeparator {
	height: 18px;
	width: 5px;
	padding: 0 1px;
	margin: 0;
}

.duiToolbar .duiSelect {
	margin: 0;
}
.dj_webkit .duiToolbar .duiSelect {
	padding-left: 0.3em;
}

// Claro overrides
.claro .duiToolbar {
	border-bottom: 1px solid @border-color;
	background-color: @bar-background-color;
	.standard-gradient;
	padding: 2px 0 2px 4px;
	zoom: 1;
}

.claro .duiToolbar label {
	padding: 0 3px 0 6px;
}

/** override claro/form/Button.css, and also ComboBox down arrow **/
.claro .duiToolbar .duiButton .duiButtonNode,
.claro .duiToolbar .duiDropDownButton .duiButtonNode,
.claro .duiToolbar .duiComboButton .duiButtonNode,
.claro .duiToolbar .duiToggleButton .duiButtonNode,
.claro .duiToolbar .duiComboBox .duiButtonNode {
	border-width: 0;	/* on hover/active, border-->1px, padding-->1px */
	padding: 2px;
	.border-radius(@toolbar-button-border-radius);
	.box-shadow(none);
	.transition-property(background-color);
	.transition-duration(.3s);

	background-color:rgba(171,214,255,0);
	background-image: none;	/* cancel gradient for normal buttons, we don't want any gradient besides toolbar's on non-hovered buttons */
}
.dj_ie .claro .duiToolbar .duiButton .duiButtonNode,
.dj_ie .claro .duiToolbar .duiDropDownButton .duiButtonNode,
.dj_ie .claro .duiToolbar .duiComboButton .duiButtonNode,
.dj_ie .claro .duiToolbar .duiToggleButton .duiButtonNode,
.dj_ie .claro .duiToolbar .duiComboBox .duiButtonNode {
	background-color: transparent;   /* for IE, which doesn't understand rgba(...) */
}

/* hover status */
.dj_ie .claro .duiToolbar .duiButton:hover .duiButtonNode,
.dj_ie .claro .duiToolbar .duiDropDownButton:hover .duiButtonNode,
.dj_ie .claro .duiToolbar .duiComboButton .duiButtonNode:hover,
.dj_ie .claro .duiToolbar .duiComboButton .duiDownArrowButton:hover,
.dj_ie .claro .duiToolbar .duiToggleButton:hover .duiButtonNode {
	/* button should still turn blue on hover, so need to override .dj_ie rules above */
	background-color: @button-hovered-background-color;
}

/* active status */
.dj_ie .claro .duiToolbar .duiButton:active .duiButtonNode,
.dj_ie .claro .duiToolbar .duiDropDownButton:active .duiButtonNode,
.dj_ie .claro .duiToolbar .duiComboButton:active .duiButtonNode,
.dj_ie .claro .duiToolbar .duiToggleButton:active .duiButtonNode {
	/* button should still turn blue on press, so need to override .dj_ie rules above */
	background-color: @button-pressed-background-color;
}

.claro .duiToolbar .duiComboButton .duiStretch {
	/* no rounded border on side adjacent to arrow */
	.border-radius(@toolbar-button-border-radius 0 0 @toolbar-button-border-radius);
}
.claro .duiToolbar .duiComboButton .duiArrowButton {
	/* no rounded border on side adjacent to button */
	.border-radius(0 @toolbar-button-border-radius @toolbar-button-border-radius 0);
}

.claro .duiToolbar .duiComboBox .duiButtonNode {
	padding: 0;
}

/* hover status */
.claro .duiToolbar .duiButton:hover .duiButtonNode,
.claro .duiToolbar .duiDropDownButton:hover .duiButtonNode,
.claro .duiToolbar .duiToggleButton:hover .duiButtonNode,
.claro .duiToolbar .duiComboButton:hover .duiButtonNode {
	border-width:1px;
	background-color: @hovered-background-color;
	.standard-gradient;
	padding: 1px;
}
.claro .duiToolbar .duiComboButton:hover .duiButtonNode,
.claro .duiToolbar .duiComboButton:hover .duiDownArrowButton {
	background-color: @toolbar-combobutton-hovered-unhoveredsection-background-color;
}
.claro .duiToolbar .duiComboButton:hover .duiButtonNode:hover,
.claro .duiToolbar .duiComboButton:hover .duiDownArrowButton:hover {
	background-color: @hovered-background-color;
}

/* active status */
.claro .duiToolbar .duiButton:active .duiButtonNode,
.claro .duiToolbar .duiDropDownButton:active .duiButtonNode,
.claro .duiToolbar .duiToggleButton:active .duiButtonNode {
	border-width: 1px;
	background-color:@pressed-background-color;
	.active-gradient;
	padding: 1px;
}
.claro .duiToolbar .duiComboButton:active {
	.transition-duration(.2s);
	border-width: 1px;
	padding: 0;
}
.claro .duiToolbar .duiComboButton:active .duiButtonNode,
.claro .duiToolbar .duiComboButton:active .duiDownArrowButton {
	background-color: @toolbar-combobutton-hovered-unhoveredsection-background-color;
	padding: 2px;
}
.claro .duiToolbar .duiComboButton:active .duiButtonNode:active {
	background-color: @pressed-background-color;
	.active-gradient;
}
.claro .duiToolbar .duiComboButton:active .duiDownArrowButton:active {
	background-color: @pressed-background-color;
	.active-gradient;
}

/* Avoid double border between button and arrow */
.claro .duiToolbar .duiComboButton:hover .duiDownArrowButton,
.claro .duiToolbar .duiComboButton:active .duiDownArrowButton {
	border-left-width: 0;
}
.claro .duiToolbar .duiComboButton:hover .duiDownArrowButton {
	padding-left: 2px;		/* since there's no left border, don't reduce from 2px --> 1px */
}

/* toggle button checked status */
.claro .duiToolbar .duiToggleButtonChecked .duiButtonNode {
	margin: 0;	/* remove margin and add a border */
	border-width: 1px;
	border-style: solid;
	background-image: none;
	border-color: @selected-border-color;
	background-color: @toolbar-button-checked-background-color;
	padding: 1px;
}

.claro .duiToolbarSeparator {
	/* separator icon in the editor sprite */
	background: url(@image-editor-icons-enabled);
}

/* Toolbar inside of disabled Editor */
.claro .duiDisabled .duiToolbar {
	background:none;
	background-color:@disabled-background-color;
	border-bottom: 1px solid @disabled-border-color;
}

.claro .duiToolbar .duiComboBoxDisabled .duiArrowButtonInner {
	background-position:0 50%;
}

