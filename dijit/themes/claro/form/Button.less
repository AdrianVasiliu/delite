/* Button | DropDownButton | ComboButton | ToggleButton
 * 
 * Styling Buttons mainly includes:
 * 
 * 1. Containers
 * 		.duiButton
 * 		.duiDropDownButton
 * 		.duiComboButton
 * 		.duiButtonNode - common button/arrow wrapper shared across all three button types 
 *
 * 2. Button text
 * 		.duiButtonText
 * 
 * 3. Arrows - only for DropDownButton and ComboButton
 * 	     There are total four directions arrows - down, left, right, up:
 * 		.duiArrowButtonInner - down arrow by default
 *      .duiLeftArrowButton .duiArrowButtonInner - left arrow
 *      .duiRightArrowButton .duiArrowButtonInner - right arrow
 *      .duiUpArrowButton .duiArrowButtonInner - up arrow
 * 
 * 4. States - Hover, Active, Disabled, e.g.
 * 		.duiButtonHover .duiButtonNode
 * 		.duiButtonActive .duiButtonNode
 * 		.duiButtonDisabled .duiButtonNode
 *      
 *      .duiDisabled .duiArrowButtonInner  - disabled arrow states 
 */

@import "../variables";

// From dijit.css

.dj_a11y .duiButtonContents {
	margin: 0.15em; /* Margin needed to make focus outline visible */
}

/* Buttons */
.dj_gecko .dj_a11y .duiButtonDisabled .duiButtonNode {
	opacity: 0.5;
}

.duiToggleButton,
.duiButton,
.duiDropDownButton,
.duiComboButton {
	/* outside of button */
	margin: 0.2em;
	vertical-align: middle;
}

.duiButtonContents {
	display: block;		/* to make focus border rectangular */
}
td.duiButtonContents {
	display: table-cell;	/* but don't affect Select, ComboButton */
}

.duiButtonNode img {
	/* make text and images line up cleanly */
	vertical-align:middle;
	/*margin-bottom:.2em;*/
}

/* Icon-only buttons (often in toolbars) should still display the text in high-contrast mode */
.dj_a11y .duiButtonContents .duiButtonText {
	display: inline !important;
}

.duiToggleButtonIconChar {
	/* character (instead of icon) to show that ToggleButton is checked */
	display:none !important;
}
.dj_a11y .duiToggleButton .duiToggleButtonIconChar {
	display:inline !important;
	visibility:hidden;
}

.dj_a11y .duiToggleButtonChecked .duiToggleButtonIconChar {
	display: inline !important; /* In high contrast mode, display the check symbol */
	visibility:visible !important;
}


.duiArrowButtonChar {
	display:none !important;
}
.dj_a11y .duiArrowButtonChar {
	display:inline !important;
}

.dj_a11y .duiDropDownButton .duiArrowButtonInner,
.dj_a11y .duiComboButton .duiArrowButtonInner {
	display:none !important;
}


// Claro overrides
.claro .duiButtonNode {
	/* rules for dui.form.*Button widgets and arrow nodes on ComboBox, Spinner etc. */
	.transition-property(background-color);
 	.transition-duration(.3s);
}

.claro .duiButton .duiButtonNode,
.claro .duiDropDownButton .duiButtonNode,
.claro .duiComboButton .duiButtonNode,
.claro .duiToggleButton .duiButtonNode {
	/* rules for the dui.form.*Button widgets (see also ComboButton section below) */
	border: 1px solid @button-border-color;
	padding: 2px 4px 4px 4px;
	color: @text-color;
	.border-radius(@button-border-radius);
	.box-shadow(0 1px 1px rgba(0,0,0,0.15));

	background-color: desaturate(darken(@button-background-color, 10), 20);

	.alpha-white-gradient(1, 0px, 0, 3px, 0.75, 100%);
}


.claro .duiComboButton .duiArrowButton {
	border-left-width: 0;
	padding: 4px 2px 4px 2px;	/* TODO: still needed? */
}

/*arrow styles for down/up/left/right directions*/
.claro .duiArrowButtonInner {
	width: 15px;
	height: 15px;
	margin: 0 auto;
	background-image:url("../@{image-form-button-arrows}");
	background-repeat:no-repeat;
	background-position:-51px 53%;
}
.claro .duiLeftArrowButton .duiArrowButtonInner {
	background-position: -77px 53%;
}
.claro .duiRightArrowButton .duiArrowButtonInner {
	background-position: -26px 53%;
}
.claro .duiUpArrowButton .duiArrowButtonInner {
	background-position: 0 53%;
}
.claro .duiDisabled .duiArrowButtonInner {
	background-position: -151px 53%;
}
.claro .duiDisabled .duiLeftArrowButton .duiArrowButtonInner {
	background-position: -177px 53%;
}
.claro .duiDisabled .duiRightArrowButton .duiArrowButtonInner {
	background-position: -126px 53%;
}
.claro .duiDisabled .duiUpArrowButton .duiArrowButtonInner {
	background-position: -100px 53%;
}

.claro .duiButtonText {
	padding: 0 0.3em;
	text-align: center;
}





/* hover status */
.claro .duiButtonHover .duiButtonNode,
.claro .duiDropDownButtonHover .duiButtonNode,
.claro .duiComboButton .duiButtonNodeHover, 
.claro .duiComboButton .duiDownArrowButtonHover,
.claro .duiToggleButtonHover .duiButtonNode {
	background-color: desaturate(darken(@button-hovered-background-color, 10), 20);
	color:@text-color;
 	.transition-duration(.2s);
}

/* active, checked status */
.claro .duiButtonActive .duiButtonNode, 
.claro .duiDropDownButtonActive .duiButtonNode,
.claro .duiComboButtonActive .duiButtonNode,
.claro .duiToggleButtonActive .duiButtonNode,
.claro .duiToggleButtonChecked .duiButtonNode {
	background-color: desaturate(darken(@button-pressed-background-color, 10), 20);
	.box-shadow(inset 0px 1px 1px rgba(0, 0, 0, 0.2));
 	.transition-duration(.1s);
}

/* disabled status */
.claro .duiButtonDisabled,
.claro .duiDropDownButtonDisabled,
.claro .duiComboButtonDisabled,
.claro .duiToggleButtonDisabled {
	background-image: none;
	outline: none;
}

.claro .duiButtonDisabled .duiButtonNode,
.claro .duiDropDownButtonDisabled .duiButtonNode,
.claro .duiComboButtonDisabled .duiButtonNode,
.claro .duiToggleButtonDisabled .duiButtonNode {
	background-color: @disabled-background-color;
	border: solid 1px @disabled-border-color;
	color: @disabled-text-color;
	.box-shadow(0 0 0 rgba(0,0,0,0));

	.alpha-white-gradient(1, 0%, 0, 40%);
}

.claro .duiComboButtonDisabled .duiArrowButton{ 
	border-left-width: 0;
}
/* for ComboButton */
.claro table.duiComboButton {
	border-collapse: separate;	/* override dijit.css so that ComboBox rounded corners work */
}

.claro .duiComboButton .duiStretch {
	.border-radius(@button-border-radius 0 0 @button-border-radius);
}
.claro .duiComboButton .duiArrowButton {
	.border-radius(0 @button-border-radius @button-border-radius 0);
}
