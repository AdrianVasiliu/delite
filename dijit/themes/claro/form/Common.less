/* claro/form/Common.css */

/*========================= common css =========================*/

@import "../variables";

// From dijit.css
.dijitInputContainer {
	/* for positioning of placeHolder */
	overflow: hidden;
	float: none !important; /* needed to squeeze the INPUT in */
	position: relative;
}

.dj_ie input.dijitTextBox,
.dj_ie .dijitTextBox input {
	font-size: 100%;
}

.dijitTextBox .dijitSpinnerButtonContainer,
.dijitTextBox .dijitArrowButtonContainer,
.dijitValidationTextBox .dijitValidationContainer {
	float: right;
	text-align: center;
}

.dijitTextBox input.dijitInputField {
	/* override unreasonable user styling of buttons and icons */
	padding-left: 0 !important;
	padding-right: 0 !important;
}
.dijitValidationTextBox .dijitValidationContainer {
	display: none;
}

.dj_a11y .dijitTextBoxReadOnly .dijitInputField,
.dj_a11y .dijitTextBoxReadOnly .dijitButtonNode {
	border-style: outset !important;
	border-width: medium !important;
	border-color: #999 !important;
	color:#999 !important;
}



.dj_a11y .dijitArrowButton {
	padding: 0 !important;
}


/* button inner contents - labels, icons etc. */
.dijitButtonNode * {
	vertical-align: middle;
}
.dijitSelect .dijitArrowButtonInner,
.dijitButtonNode .dijitArrowButtonInner {
	/* the arrow icon node */
	background: no-repeat center;
	width: 12px;
	height: 12px;
	direction: ltr; /* needed by IE/RTL */
}


.dijitButtonNode {
	/* Node that is acting as a button -- may or may not be a BUTTON element */
	border:1px solid gray;
	margin:0;
	line-height:normal;
	vertical-align: middle;
	text-align:center;
	white-space: nowrap;
}


.dijitTextBox .dijitButtonNode {
	border-width: 0;
}

.dijitButtonNode,
.dijitButtonNode * {
	cursor: pointer;
	-webkit-tap-highlight-color: transparent;
}
.dj_ie .dijitButtonNode {
	/* ensure hasLayout */
	zoom: 1;
}

.dj_ie .dijitButtonNode button {
	/*
	disgusting hack to get rid of spurious padding around button elements
	on IE. MSIE is truly the web's boat anchor.
	*/
	overflow: visible;
}

div.dijitArrowButton {
	float: right;
}


/******
	TextBox related.
	Everything that has an <input>
*******/

.dijitTextBox {
	border: solid black 1px;
	width: 15em;	/* need to set default size on outer node since inner nodes say <input style="width:100%"> and <td width=100%>.  user can override */
	vertical-align: middle;
}

.dijitTextBoxReadOnly,
.dijitTextBoxDisabled {
	color: gray;
}
.dj_safari .dijitTextBoxDisabled input {
	color: #B0B0B0; /* because Safari lightens disabled input/textarea no matter what color you specify */
}
.dj_safari textarea.dijitTextAreaDisabled {
	color: #333; /* because Safari lightens disabled input/textarea no matter what color you specify */
}
.dj_gecko .dijitTextBoxReadOnly input.dijitInputField, /* disable arrow and validation presentation inputs but allow real input for text selection */
.dj_gecko .dijitTextBoxDisabled input {
	-moz-user-input: none; /* prevent focus of disabled textbox buttons */
}

.dijitPlaceHolder {
	/* hint text that appears in a textbox until user starts typing */
	color: #AAAAAA;
	font-style: italic;
	position: absolute;
	top: 0;
	left: 0;
}

.dijitTimeTextBox {
	width: 8em;
}

/* rules for webkit to deal with fuzzy blue focus border */
.dijitTextBox input:focus {
	outline: none;	/* blue fuzzy line looks wrong on combobox or something w/validation icon showing */
}
.dijitTextBoxFocused {
	outline: 5px -webkit-focus-ring-color;
}

.dijitSelect input,
.dijitTextBox input {
	float: left; /* needed by IE to remove secret margin */
}
.dijitInputInner {
	/* for when an <input> is embedded inside an inline-block <div> with a size and border */
	border:0 !important;
	background-color:transparent !important;
	width:100% !important;
	/* IE dislikes horizontal tweaking combined with width:100% so punish everyone for consistency */
	padding-left: 0 !important;
	padding-right: 0 !important;
	margin-left: 0 !important;
	margin-right: 0 !important;
}
.dj_a11y .dijitTextBox input {
	margin: 0 !important;
}
.dijitValidationTextBoxError input.dijitValidationInner,
.dijitSelect input,
.dijitTextBox input.dijitArrowButtonInner {
	/* <input> used to display arrow icon/validation icon, or in arrow character in high contrast mode.
 * The css below is a trick to hide the character in non-high-contrast mode
 */
	text-indent: -2em !important;
	direction: ltr !important;
	text-align: left !important;
	height: auto !important;
}
.dj_ie .dijitSelect input,
.dj_ie .dijitTextBox input,
.dj_ie input.dijitTextBox {
	overflow-y: visible; /* inputs need help expanding when padding is added or line-height is adjusted */
	line-height: normal; /* strict mode */
}
.dijitSelect .dijitSelectLabel span {
	line-height: 100%;
}
.dj_ie .dijitSelect .dijitSelectLabel {
	line-height: normal;
}
.dj_ie8 .dijitSelect .dijitSelectLabel,
.dijitSelect td {
	line-height: 100%; /* IE7 problem where the icon is vertically way too low w/o this */
}
.dj_a11y input.dijitValidationInner,
.dj_a11y input.dijitArrowButtonInner {
	/* (in high contrast mode) revert rules from above so character displays */
	text-indent: 0 !important;
	width: 1em !important;
	color: black !important;
}
.dijitValidationTextBoxError .dijitValidationContainer {
	display: inline;
	cursor: default;
}

.dijitComboBox .dijitArrowButtonContainer {
	/* dividing line between input area and up/down button(s) for ComboBox */
	border-width: 0 0 0 1px !important; /* !important needed due to wayward ".theme .dijitButtonNode" rules */
}

.dijitComboBoxMenu {
	/* Drop down menu is implemented as <ul> <li/> <li/> ... but we don't want circles before each item */
	list-style-type: none;
}

.dijitComboBox .dijitButtonNode {
	border-width: 0;
}

/* TextArea, SimpleTextArea */
.dijitTextArea {
	width:100%;
	overflow-y: auto;	/* w/out this IE's SimpleTextArea goes to overflow: scroll */
}
.dijitTextArea[cols] {
	width:auto; /* SimpleTextArea cols */
}

.dijitExpandingTextArea {
	/* for auto exanding textarea (called Textarea currently, rename for 2.0) don't want to display the grip to resize */
	resize: none;
}


.dijitNumberTextBox {
	text-align: left;
	direction: ltr;
}

.dijitNumberTextBox .dijitInputInner {
	text-align: inherit; /* input */
}

// Claro overrides

/* 'dijitTextBox' refers to 'dijit(TextBox|DateTextBox|CurrencyTextBox|...)' */

.claro .dijitTextBox,
.claro .dijitInputInner {
	// .dijitInputInner selector needed for ValidationTextBox on IE6 because <input> doesn't inherit
	// the color setting from the ancestor div.dijitTextBox
	color: @text-color;
}

.claro .dijitValidationTextBoxError .dijitValidationContainer {
	background-color: @erroricon-background-color;
	background-image: url("../@{image-form-error}");
	background-position: top center;
	border: solid @erroricon-background-color 0;
	width: 9px;
}

.claro .dijitTextBoxError .dijitValidationContainer {
	border-left-width: 1px;
}

.claro .dijitValidationTextBoxError .dijitValidationIcon {
	width: 0;
	background-color: transparent; /* so the INPUT doesn't obscure the border in rtl+a11y */
}

/* Padding for the input area of TextBox based widgets, and corresponding padding for the
 * down arrow button and the placeholder.   placeholder is explicitly listed  because
 * dijitPlaceHolder is absolutely positioned, so padding set on dijitInputField
 * won't affect it
 */
.claro .dijitTextArea,
.claro .dijitInputField .dijitPlaceHolder {
	padding: @textbox-padding;
}

.claro .dijitSelect .dijitInputField,
.claro .dijitTextBox .dijitInputField {
	// Subtract 1px from top/bottom because we add 1px to other nodes, see rules below.
	// Although we are theoretically only adding 1px to top/bottom browsers seem to pad inputs by 1px on left/right,
	// although that varies by so compensate for that too.
	padding: @textbox-padding - 1px  @textbox-padding;
}

.dj_gecko .claro .dijitTextBox .dijitInputInner,
.dj_webkit .claro .dijitTextBox .dijitInputInner {
	// Although we are theoretically only adding 1px to top/bottom, some browsers seem to pad inputs by 1px on left/right,
	// so compensate for that too.
	padding: @textbox-padding - 1px;
}

.claro .dijitSelect,
.claro .dijitSelect .dijitButtonContents,
.claro .dijitTextBox,
.claro .dijitTextBox .dijitButtonNode {
	/* color for (outer) border on *TextBox widgets, and border between input and buttons on ComboBox and Spinner */
	border-color: @border-color;
	.transition-property(background-color, border);
 	.transition-duration(.35s);
}

.claro .dijitSelect,
.claro .dijitTextBox {
	background-color: @textbox-background-color;
}

/* hover */
.claro .dijitSelectHover,
.claro .dijitSelectHover .dijitButtonContents,
.claro .dijitTextBoxHover,
.claro .dijitTextBoxHover .dijitButtonNode {
	border-color: @hovered-border-color;
 	.transition-duration(.25s);
}

.claro .dijitTextBoxHover {
	background-color: @textbox-hovered-background-color;
	.textbox-background-image;
}

/* error state */
.claro .dijitSelectError,
.claro .dijitSelectError .dijitButtonContents,
.claro .dijitTextBoxError,
.claro .dijitTextBoxError .dijitButtonNode {
	border-color: @error-border-color;
}

/* focused state */
.claro .dijitSelectFocused,
.claro .dijitSelectFocused .dijitButtonContents,
.claro .dijitTextBoxFocused,
.claro .dijitTextBoxFocused .dijitButtonNode {
	border-color:@focused-border-color;
 	.transition-duration(.1s);
}

.claro .dijitTextBoxFocused {
	background-color: @textbox-focused-background-color;
	.textbox-background-image;
}
.claro .dijitTextBoxFocused .dijitInputContainer {
	background: @textbox-focused-background-color;
}

.claro .dijitSelectErrorFocused,
.claro .dijitSelectErrorFocused .dijitButtonContents,
.claro .dijitTextBoxErrorFocused,
.claro .dijitTextBoxErrorFocused .dijitButtonNode {
	border-color: @error-focused-border-color;
}

/* disabled state */
.claro .dijitSelectDisabled,
.claro .dijitSelectDisabled .dijitButtonContents,
.claro .dijitTextBoxDisabled,
.claro .dijitTextBoxDisabled .dijitButtonNode {
	border-color: @disabled-border-color;
}

.claro .dijitSelectDisabled,
.claro .dijitTextBoxDisabled,
.claro .dijitTextBoxDisabled .dijitInputContainer {
	background-color: @textbox-disabled-background-color;
	background-image: none;
}

.claro .dijitSelectDisabled,
.claro .dijitTextBoxDisabled,
.claro .dijitTextBoxDisabled .dijitInputInner {
	color: @disabled-text-color;
}

.dj_webkit .claro .dijitDisabled input {
	/* because WebKit lightens disabled input/textarea no matter what color you specify */
	color: darken(@disabled-text-color, 5%)
}

.dj_webkit .claro textarea.dijitTextAreaDisabled {
	/* because WebKit lightens disabled input/textarea no matter what color you specify */
	color: darken(@disabled-text-color, 40%)
}

/*========================= for special widgets =========================*/

/* Input boxes with an arrow (for a drop down) */

.claro .dijitSelect .dijitArrowButtonInner,
.claro .dijitComboBox .dijitArrowButtonInner {
	background-image: url("../@{image-form-common-arrows}");
	background-position:-35px 53%;
	background-repeat: no-repeat;
	margin: 0;
	width:16px;
}

.claro .dijitComboBox .dijitArrowButtonInner {
	border: 1px solid @arrowbutton-inner-border-color;	// white gutter around the arrow button
}

.claro .dijitToolbar .dijitComboBox .dijitArrowButtonInner {
	border: none;
}

.claro .dijitToolbar .dijitComboBox .dijitArrowButtonInner {
	border: none;
}

/* Add 1px vertical padding to the <input> where user types and the validation icon,
   to match the 1px border on arrow button */
.claro .dijitSelectLabel,
.claro .dijitTextBox .dijitInputInner,
.claro .dijitValidationTextBox .dijitValidationContainer {
	padding: 1px 0;
}

.claro .dijitComboBox .dijitButtonNode {
	background-color: @arrowbutton-background-color;
	.standard-gradient("../");
}

/* Arrow "hover" effect:
 * The arrow button should change color whenever the mouse is in a position such that clicking it
 * will toggle the drop down.   That's either (1) anywhere over the ComboBox or (2) over the arrow
 * button, depending on the openOnClick setting for the widget.
 */
.claro .dijitComboBoxOpenOnClickHover .dijitButtonNode,
.claro .dijitComboBox .dijitDownArrowButtonHover,
.claro .dijitComboBoxFocused .dijitArrowButton {
	background-color:@arrowbutton-hovered-background-color;
}

.claro .dijitComboBoxOpenOnClickHover .dijitArrowButtonInner,
.claro .dijitComboBox .dijitDownArrowButtonHover .dijitArrowButtonInner {
	background-position:-70px 53%;
}

/* Arrow Button change when drop down is open */
.claro .dijitComboBox .dijitHasDropDownOpen {	// .dijitHasDropDown is on dijitArrowButton node
	background-color: @pressed-background-color;
	.active-gradient("../");
	padding: 1px;		// Since no border on arrow button (see rule below)
}

.claro .dijitComboBox .dijitHasDropDownOpen .dijitArrowButtonInner {
	background-position:-70px 53%;
	border: 0 none;
}

/* disabled state */
.claro div.dijitComboBoxDisabled .dijitArrowButtonInner {
	/* specific selector set to override background-position setting from Button.js
	 * (.claro .dijitComboBoxDisabled .dijitArrowButtonInner) */
	background-position:0 50%;
	background-color:@disabled-background-color;
}

.dj_borderbox .claro .dijitComboBox .dijitHasDropDownOpen .dijitArrowButtonInner {
	width:18px;				// 18px with the border (same as 16px without border)
}

.dj_borderbox .claro .dijitComboBoxFocused .dijitHasDropDownOpen .dijitArrowButtonInner {
	width:16px;				// when no border, then back to 16px just like content-box sizing
}
